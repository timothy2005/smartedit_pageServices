<?xml version="1.0"?>
<!--
 [y] hybris Platform

 Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->
<project name="cmssmartedit_buildcallbacks">

    <patternset id="extension.cmssmartedit.binary.filter">
        <patternset refid="extension.binary.filter"/>
        <exclude name="build/"/>
        <exclude name="smartedit-build/"/>
        <exclude name="node_modules/"/>
        <exclude name="jsTarget/"/>
        <exclude name="package.json"/>
        <exclude name="diffAnalysisResults/"/>
        <exclude name="smartedit-custom-build/generated/"/>
    </patternset>

    <patternset id="extension.cmssmartedit.source.filter">
        <patternset refid="extension.source.filter"/>
        <exclude name="build/"/>
        <exclude name="smartedit-build/"/>
        <exclude name="node_modules/"/>
        <exclude name="jsTarget/"/>
        <exclude name="package.json"/>
        <exclude name="diffAnalysisResults/"/>
        <exclude name="smartedit-custom-build/generated/"/>
    </patternset>

    <patternset id="extension.cmssmartedit.production.filter">
        <patternset refid="extension.production.filter"/>
        <exclude name="build/"/>
        <exclude name="smartedit-build/"/>
        <exclude name="node_modules/"/>
        <exclude name="jsTarget/"/>
        <exclude name="package.json"/>
        <exclude name="diffAnalysisResults/"/>
        <exclude name="diffAnalysisResults/"/>
        <exclude name="smartedit-custom-build/generated/"/>
    </patternset>

<!-- copied from npmancillary/buildcallbacks.xml, target 'repairnpm' -->
    <!-- you can't call an ant target from a macro, but you can call other macros :) -->
    <macrodef name="repairnpmmacro">
        <sequential>
            <echo message="fixing node/npm symlinks and permissions"/>
            <detectOS/>
            <property file="${ext.npmancillary.path}${file.separator}resources${file.separator}ant${file.separator}${os.family}.properties" />
            <if>
                <not>
                    <os family="windows"/>
                </not>
                <then>
                    <!-- sometimes the npm link is converted to file -->
                    <exec executable="${ext.npmancillary.path}/resources/npm/repairnpm.sh">
                        <arg line="${os.family}"/>
                    </exec>
                </then>
            </if>
        </sequential>
    </macrodef>

    <!-- copied from npmancillary/buildcallbacks.xml, macrodef 'invokeNpm' -->
    <!-- added the option to specifice the directory in which npm is invoked, workingDir -->
    <macrodef name="invokeNpmCustomWorkingDir">
        <attribute name="arguments" default=""/>
        <attribute name="workingDir" default=""/>
        <sequential>
            <echo message="Running [npm @{arguments}] in directory @{workingDir}"/>
            <property environment="env"/>
            <detectOS/>
            <property file="${ext.npmancillary.path}${file.separator}resources${file.separator}ant${file.separator}${os.family}.properties" />

            <if>
                <os family="windows" />
                <then>
                    <exec executable="cmd" dir="@{workingDir}" failonerror="true">
                        <arg value="/c"/>
                        <arg value="${loc.NODE_HOME}${file.separator}npm"/>
                        <arg line="@{arguments}"/>
                    </exec>
                </then>
                <else>
                    <exec dir="@{workingDir}" executable="${loc.NODE_HOME}${file.separator}bin${file.separator}npm" failonerror="true" >
                        <env key="PATH" value="${loc.EXTRA_PATH}${path.separator}${env.PATH}"/>
                        <arg line="@{arguments}"/>
                    </exec>
                </else>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="cmssmartedit_before_clean">
        <sequential>
            <if>
				<available file="${ext.npmancillary.path}${file.separator}resources${file.separator}npm${file.separator}node_modules" type="dir"/>
                <then>
                    <delete dir="${ext.cmssmartedit.path}${file.separator}temp"/>
                    <delete dir="${ext.cmssmartedit.path}${file.separator}jsTarget"/>
                    <delete dir="${ext.cmssmartedit.path}${file.separator}web${file.separator}webroot${file.separator}css"/>
                    <delete dir="${ext.cmssmartedit.path}${file.separator}web${file.separator}webroot${file.separator}cmssmartedit${file.separator}js"/>
                    <unLinkSmarteditBundle target="${ext.cmssmartedit.path}"></unLinkSmarteditBundle>
                    <removeNodeModulesSymlink path="${ext.cmssmartedit.path}"/>
                </then>
            </if>
        </sequential>
    </macrodef>



    <macrodef name="cmssmartedit_before_build">
        <sequential>

            <echo message="installing my npm stuff"/>
            <repairnpmmacro/>
            <invokeNpmCustomWorkingDir arguments="install" workingDir="${ext.npmancillary.path}/resources/npm" />

            <if>
				<available file="${ext.npmancillary.path}${file.separator}resources${file.separator}npm${file.separator}node_modules" type="dir"/>
                <then>
                    <linkSmarteditBundle target="${ext.cmssmartedit.path}"></linkSmarteditBundle>
					<gruntBuild path="${ext.cmssmartedit.path}" phase="packageSkipTests"/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="cmssmartedit_before_yunit">
        <sequential>
            <if>
				<available file="${ext.npmancillary.path}${file.separator}resources${file.separator}npm${file.separator}node_modules" type="dir"/>
                <then>
                    <gruntBuild path="${ext.cmssmartedit.path}" phase="test_only"/>
                </then>
            </if>
        </sequential>
    </macrodef>

</project>
